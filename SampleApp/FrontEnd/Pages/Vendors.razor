@page "/vendor"
@using FrontEnd.Data
@using FrontEnd.Components
@using System.Web

<VendorModal ParentMethod="@Add" />
<ConfirmDialog @ref="dialog" />

<p>Vendors</p>
@if(vendors == null) {
    <p><em>Loading...</em></p>
}
else {
    
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Number</th>
                <th>City</th>
                <th>Vendor Group Id</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var vendor in vendors) {
                @if(@vendor.IsNotDeleted == 1)
                {
                    <tr>
                        <td>@vendor.Id</td>
                        <td>@vendor.Name</td>
                        <td>@vendor.Number</td>
                        <td>@vendor.City</td>
                        <td>@vendor.VendorGroupId</td>
                        <td><VendorEditModal ParentMethod="@Edit" Id="@vendor.Id" InputName="@vendor.Name" InputNumber="@vendor.Number" InputCity="@vendor.City" InputVendorGroupId="@vendor.VendorGroupId" /></td>
                        <td><Button Color="ButtonColor.Danger" @onclick="() => ShowConfirmationAsync(vendor.Id)" ><Icon Name="IconName.Trash" /></Button></td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    private ConfirmDialog dialog = default!;
    private async Task ShowConfirmationAsync(int id)
    {
        var confirmation = await dialog.ShowAsync(
            title: "Are you sure you want to delete this?",
            message1: "This will delete the record. Once deleted can not be rolled back.",
            message2: "Do you want to proceed?");

        if (confirmation)
        {
            Delete(id);
        }
        else
        {
            
        }
    }
    private List<Vendor> vendors;
        
    VendorContext vendorContext = new VendorContext();
    protected override void OnInitialized() {
        vendors = vendorContext.ReadVendors();
    }

    protected void Add(string input) {
        string[] words = input.Split('/');
        vendorContext.AddVendor(words[0], words[1], words[2], words[3]);
        vendors = vendorContext.ReadVendors();
        StateHasChanged();
    }

    protected void Delete(int input) {
        vendorContext.DeleteVendor(input);
        vendors = vendorContext.ReadVendors();
        StateHasChanged();
    }

    protected void Edit(string input) {
        string[] words = input.Split('/');
        vendorContext.EditVendor(Int32.Parse(words[0]), words[1], words[2], words[3], words[4]);
        vendors = vendorContext.ReadVendors();
        StateHasChanged();
    }
}